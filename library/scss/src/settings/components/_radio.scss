@mixin component-radio($form-type: no-type, $form-theme: no-theme) {

	@include form-class($form-type, $form-theme, false) {

		.forminator-radio {
			cursor: default;
			pointer-events: none;
			display: flex;
			position: relative;
			margin: 5px 0;

			input {
				@extend %screen-readers;

				&:checked {

					@if ('material' == $form-theme) {

						&:focus {

							+ span[aria-hidden]:after {
								animation-name: click-animation;
							}
						}
					}

					+ span[aria-hidden]:before {
						@include opacity(1);
					}

					@if ('material' == $form-theme) {

						+ span[aria-hidden]:after {
							@include opacity(1);
						}
					}
				}
			}

			span {
				cursor: pointer;
				pointer-events: all;
				display: block;
			}

			span[aria-hidden] {
				width: map-get($radio, size);
				height: map-get($radio, size);
				flex: 0 0 map-get($radio, size);
				position: relative;
				@if ('default' == $form-theme) {
					border-width: map-get($border-width, default);
					border-style: map-get($border-style, default);
				}
				@if ('flat' == $form-theme) {
					border-width: map-get($border-width, flat);
					border-style: map-get($border-style, flat);
				}
				@if ('bold' == $form-theme) {
					border-width: map-get($border-width, bold);
					border-style: map-get($border-style, bold);
				}
				@if ('material' == $form-theme) {
					border-width: #{map-get($border-width, material) * 2};
					border-style: map-get($border-style, material);
				}
				border-radius: #{map-get($radio, size) * 2};

				&:before {
					content: " ";
					@if ('default' == $form-theme) {
						width: #{map-get($radio, size) / 2};
						height: #{map-get($radio, size) / 2};
					}
					@if ('flat' == $form-theme) {
						width: #{map-get($radio, size) / 2};
						height: #{map-get($radio, size) / 2};
					}
					@if ('bold' == $form-theme) {
						width: #{(map-get($radio, size) / 2) - map-get($border-width, bold)};
						height: #{(map-get($radio, size) / 2) - map-get($border-width, bold)};
					}
					@if ('material' == $form-theme) {
						width: #{map-get($radio, size) / 2};
						height: #{map-get($radio, size) / 2};
					}
					@include opacity(0);
					display: block;
					position: absolute;
					top: 50%;
					left: 50%;
					border-radius: 100%;
					transform: translate(-50%, -50%);
					transition: map-get($transition, ease);
				}

				@if ('material' == $form-theme) {

					&:after {
						content: " ";
						@include opacity(0);
						width: map-get($radio, size);
						height: map-get($radio, size);
						position: absolute;
						top: 50%;
						left: 50%;
						border-radius: 100%;
						transform: translate(-50%, -50%) scale(0);
						transform-origin: center;
						transform-style: preserve-3d;
						animation-duration: 0.6s;
						animation-fill-mode: both;
					}
				}

				+ span {
					margin-left: 10px;
				}
			}

			span:not([aria-hidden]) {
				flex: 0 1 auto;
				line-height: 20px;
			}

			// VARIATION: Inline
			&.forminator-radio-inline {
				display: inline-flex;
				vertical-align: middle;
				margin-right: 20px;
				margin-bottom: 0;

				&:last-of-type {
					margin-right: 0;
				}
			}

			// VARIATION: Stacked
			&:not(.forminator-radio-inline) {

				&:first-child {
					margin-top: 0;
				}

				&:last-child {
					margin-bottom: 0;
				}
			}
		}
	}
}